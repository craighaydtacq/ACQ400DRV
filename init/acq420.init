#!/bin/sh

echo acq420.init B1010

echo changing loglevel to debug
echo 9 > /proc/sys/kernel/printk

BLEN=1048576
NBUF=512

# check for AXI DMA
grep load.*_64B /tmp/fpga_status
if [ $? -eq 0 ]; then
    BLEN=4194304
    NBUF=128
fi


DROOT=/sys/kernel/debug

SYSCONF=/mnt/local/sysconfig
ULB=/usr/local/bin
ULC=/usr/local/CARE
DK0=/dev/acq400.0.knobs

export MODP=/sys/module/acq420fmc/parameters

source $ULB/mod_id.sh

HAS_MGTDRAM=none

if [ -e /mnt/local/acq400_stream ]; then
    echo override from /mnt/local/acq400_stream
    cp /mnt/local/acq400_stream $ULB
fi

[ -e /mnt/local/sysconfig/acq400_streamd.conf ] && \
    cp /mnt/local/sysconfig/acq400_streamd.conf /etc/sysconfig

if [ -e /mnt/local/sysconfig/acq400.sh ]; then
    cp /mnt/local/sysconfig/acq400.sh /etc/profile.d
    echo "source /mnt/local/sysconfig/acq400.sh"
    source /mnt/local/sysconfig/acq400.sh
fi
ln -s $DROOT/dynamic_debug/control /dev/ddc

source /tmp/u-boot_env
if [ "x${EBREAK}" = "xyes" ]; then
    echo acq420.init 1: BREAK to emergency shell ^D when done
    PS1="${PS1%>*} EBREAK ${PS1#*>}" /bin/sh
fi
MODEL=${devicetree_image%*.dtb}; 
MODEL=${MODEL#*/}
export MODEL

if [ "x$MODEL" = "x" ]; then
    HN=$(hostname)
    MODEL=${HN%_*}
fi

SN=${dtsn}

is_adc() {
    sn=$(cat /etc/acq400/$1/SERIAL)
    elf=${sn%????????}
    case $elf in
    E|F)
        snt=${sn%????}
        echo ${snt#????};;
    *)
        echo 0;;
    esac
}

build_hb_node() {
    nn=$(printf "$3" $2)
    let minor="1000+$2"
    mknod $nn c $1 $minor           
}
build_hb() {
    MAJOR=$1
    NAME=$2

    HBDIR=/dev/${NAME}.hb
    NB=$(cat /dev/${NAME}.knobs/nbuffers)
    mkdir $HBDIR
    if [ $NB -gt 0 ]; then
        let NB0=$NB-1
        for hb in $(seq 0 $NB0); do
            if [ $hb -lt 10 ]; then
                build_hb_node $MAJOR $hb "$HBDIR/%02d"                  
            fi
            NN=$(printf "$HBDIR/%03d" $hb)
            let minor="1000+$hb"
            mknod $NN c $MAJOR $minor       
        done
    fi
}
build_nodes() {
    finit=0
    while [ $finit -eq 0 ]; do
        read M_DEV
        if [ "$M_DEV" = "" ]; then
            finit=1;
        else
            MAJOR=${M_DEV% *}
            NAME=${M_DEV#* }        
            ID=${M_DEV#*.}

            echo +++ build nodes site $ID           
            mknod /dev/${NAME}          c ${MAJOR} 0
            mknod /dev/${NAME}.c        c ${MAJOR} 1
            mknod /dev/${NAME}.histo    c ${MAJOR} 2
            mknod /dev/${NAME}.hb0      c ${MAJOR} 3
            mknod /dev/${NAME}.cs       c ${MAJOR} 4
            if [ $ID -eq 0 ]; then
                mknod /dev/${NAME}.gpg  c ${MAJOR}  5
                mknod /dev/${NAME}.dac c  ${MAJOR} 7
                mknod /dev/${NAME}.rsv  c ${MAJOR} 11
                mknod /dev/${NAME}.rsvd c ${MAJOR} 18
                mknod /dev/${NAME}.bq   c ${MAJOR} 15   
                mknod /dev/${NAME}.bqf  c ${MAJOR} 17
                mknod /dev/${NAME}.axi0 c ${MAJOR} 19
            else
                mknod /dev/${NAME}.ev   c ${MAJOR}  6
                mknod /dev/${NAME}.atd  c ${MAJOR} 16
                mknod /dev/${NAME}.scnt c ${MAJOR} 39               
            fi
            mknod /dev/${NAME}.subr c ${MAJOR} 40
            
            build_hb ${MAJOR} ${NAME}
            
            case $(cat /dev/acq400.$ID.knobs/module_type) in            
            ${MOD_ID_AO420FMC}|${MOD_ID_AO424ELF})
                mknod /dev/${NAME}.awg c  ${MAJOR} 9
                mknod /dev/${NAME}.awgc c ${MAJOR} 10
                mknod /dev/${NAME}.awgr c ${MAJOR} 14
                mknod /dev/${NAME}.aoi  c ${MAJOR} 38
                mknod /dev/${NAME}.abcde c ${MAJOR} 41
                if [ ! -e /dev/acq400.0.abcde ]; then
					ln -s /dev/${NAME}.abcde /dev/acq400.0.abcde
                fi;;
            ${MOD_ID_BOLO8}|${MOD_ID_BOLO8B})
                mknod /dev/${NAME}.awg c ${MAJOR} 8;;
            ${MOD_ID_DIO432FMC}|${MOD_ID_DIO432PMOD}|${MOD_ID_DIO482FMC})
                if [ -e /dev/acq400.$ID.knobs/gpg_enable ]; then
                    mknod /dev/acq400.$ID.gpg c ${MAJOR} 5
                    mknod /dev/acq400.$ID.gpg32 c ${MAJOR} 28
                else
                    mknod /dev/${NAME}.awg c  ${MAJOR} 9
                    mknod /dev/${NAME}.awgc c ${MAJOR} 10
                    mknod /dev/${NAME}.awgr c ${MAJOR} 14
                fi;;
            ${MOD_ID_DIO482TD_PG})
                mknod /dev/acq400.$ID.gpg c ${MAJOR} 5;;
            ${MOD_ID_ACQ435ELF})
                mknod /dev/${NAME}.sew1 c ${MAJOR}  12
                mknod /dev/${NAME}.sew2 c ${MAJOR}  13
            esac
        fi
    done
}
# daemon $ULB/add_webpage_site acq400.${site} ${site}

export WEB_APPEND_JOB=/tmp/acq420-web-append.job

web_append()
{
    if [ ! -e $WEB_APPEND_JOB ]; then
        echo '#!/bin/sh' >$WEB_APPEND_JOB
        echo '# created by acq420.init' >> $WEB_APPEND_JOB
        chmod a+rx $WEB_APPEND_JOB
    fi
    echo "$ULB/add_webpage_site $1 $2" >> $WEB_APPEND_JOB
}


build_etc_site() {
    site=$1
    ek=/etc/acq400/${site}
    
#    PS1="build_etc_site $1 \>" sh
     
    mkdir -p ${ek}
    dk=/dev/acq400.${site}.knobs
    for src in ${dk}/*; do
        case $(basename $src) in
        driver*|subsystem|power|uevent|dacspi|dacreset|RW32_debug)
            ;;
        *)
            ln -s ${src} ${ek};;
        esac
    done


    [ -e ${SYSCONF}/site-${site}-peers ] && \
        cp ${SYSCONF}/site-${site}-peers /etc/acq400/${site}/peers      
}


set_max_min_khz() {
    echo $2 >/etc/acq400/$1/MAX_KHZ
    echo $3 >/etc/acq400/$1/MIN_KHZ
}

IS_ACQ427=0
customize_acq420()
{
    source  /dev/sites/$1/details
    PN="${FRU_PART_NUM%% *}"
    old_ifs=$IFS; IFS="-"
    let ix=0
    knobd=/dev/acq400.$1.knobs
    set_max_min_khz $1 1000 10

    IS_ACQ427=0
    for field in $PN
    do
        case $ix in
        0)          
            case $field in
            ACQ420FMC)  echo ACQ420FMC detected;;
            ACQ425?LF)  echo $field detected;;
            ACQ427ELF)  IS_ACQ427=1; echo ACQ427ELF detected;;
            *)
                echo "ERROR: model $field not recognized";;
            esac;;
        1)
            if [ $IS_ACQ427 -ne 0 ]; then
                IS_ACQ427=$field
                case $field in
                01) echo "AI=8";;                   
                03) echo "AI=8 AO=4";;
                02) echo "AI=4 AO=4";;
                *)
                    echo "unknown type code $field";;
                esac  
            else 
                echo NCHAN=$field
            fi;;                
        2)
            echo SPEED=$field           
            case $field in
            2000)
                echo $field >/etc/acq400/$1/MAX_KHZ
                CLKDIV=50
                ADC_CONV=26;;
            1000)
                echo $field >/etc/acq400/$1/MAX_KHZ
                CLKDIV=100
                ADC_CONV=54;;
            *)
                CLKDIV=200
                ADC_CONV=150;;
            esac
            echo "SPEED:$field set adc_conv_time:$ADC_CONV"
            set.sys $knobd/adc_conv_time $ADC_CONV;;
        3)
            echo BITS=$field
            case $field in
            24|18)
                set.sys $knobd/data32 1
                set.sys $knobd/adc_18b 1
                echo "set data32 $(get.sys $knobd/data32)"
                echo "set adc_18b $(get.sys $knobd/adc_18b)"
                if [ -e $knobd/adc_nobt ]; then
                    case $field in
                    24)
                        set.sys $knobd/adc_nobt 3;;
                    *)
                        set.sys $knobd/adc_nobt 1;;
                    esac
                elif [ $BITS -eq 24 ]; then
                    echo WARNING: 24 bit mode NOT supported
                fi;;
            *)
                set.sys $knobd/data32 0
                set.sys $knobd/adc_18b 0;;
            esac;;              
        esac
        let ix="$ix+1"
    done
    IFS=${old_ifs}
}

BOLO8_SITES=""
ACQ423_SITES=""
ACQ425_SITES=""
ACQ427_SITES=""
ACQ437_SITES=""
ACQ400T_SITES=""
ACQ426_SITES=""
ACQ465_SITES=""
DI460_SITES=""
AO420_SITES=""

start_knob_services()
{
    /usr/local/init/acq400_knobs.init start
}

create_gx() {
nc=${2:-16}
chans="$(seq 0 $nc)"
cat - >$1/gx <<EOF
#!/bin/sh
gx=\$(./gain1)
for g in $chans
do
    gx="\$gx\$(./gain\$g)"
done
echo \$gx
EOF
chmod a+rx $1/gx
}

get_mtype() {
    if [ -f /dev/sites/$1/details ]; then
        source /dev/sites/$1/details
        eval ${FRU_PART_NUM#* }
        echo $M
    fi
}

get_nchan() {
    if [ -f /dev/sites/$1/details ]; then
        source /dev/sites/$1/details
        eval ${FRU_PART_NUM#* }
        echo $N
    fi
}


fake_fmc2_leds() 
{
    echo 0 >/dev/gpio/LED/FMC2_R
    echo 1 >/dev/gpio/LED/FMC2_G
}

make_acq494_spi_fields() {
    ek=$1
    for ch in 1 2 3 4; do       
        mspec=$(printf "0x%02x" $((1<<($ch-1))))
        cat - >$ek/gpx2_hit_ena_$ch <<EOF
#!/bin/sh
exec reg_rw 1 M=$mspec \$1    
EOF
    done
    cat - >$ek/gpx2_channel_combine <<EOF
#!/bin/sh
exec reg_rw 1 M=0x30 \$1    
EOF
   cat - >$ek/gpx2_hi_res <<EOF
#!/bin/sh
exec reg_rw 1 M=0xc0 \$1    
EOF
    chmod a+rx $ek/gpx2_hit_ena* $ek/gpx2_channel_combine $ek/gpx2_hi_res
}

init_scaler() {
	ek=$1
	site=$2
	mv=$3
	nc=$4

	echo $nc > ${ek}/NCHAN
	if [ "$mv" = "20" ]; then
		_maxkhz=50000
	else
		_maxkhz=250000
	fi
	set_max_min_khz ${site} $_maxkhz 10

	for cnt in /sys/kernel/debug/acq400/acq400.${site}/cnt*; do
		if [ -e $cnt ]; then
			fb=$(basename $cnt)
			kb=${fb%.CNTR*}
			ln -s $cnt ${ek}/${kb}
		fi
	done
}

build_knobs_acq43x() {
        site=$1; mtype=$2 dk=$3 ek=$4

        case $mtype in
        ${MOD_ID_ACQ435ELF})
                source  /dev/sites/${site}/details
                eval $(echo $FRU_PART_NUM|awk '{print $2}')
                case $N in
                         8) echo A > ${dk}/bank_mask;;
                        16) echo AB > ${dk}/bank_mask;;
                        24) echo ABC > ${dk}/bank_mask;;
                esac;;
        ${MOD_ID_ACQ437ELF})
            create_gx ${ek}/ 16
            if [ "x$ACQ437_SITES" != "x" ]; then
                ACQ437_SITES="${ACQ437_SITES} "
            fi
            ACQ437_SITES="${ACQ437_SITES}$site";;
        esac
        echo WORKAROUND: clear FIFERR
        echo 0 >${MODP}/FIFERR
        echo 4 >${ek}/SAMPLE_SIZE
        set_max_min_khz ${site} 128 4
        CLKDIV=8
}

build_knobs_ao420() {
        site=$1; mtype=$2 dk=$3 ek=$4

        case $mtype in
        ${MOD_ID_DAC_CELF})
            set_max_min_khz ${site} 250 10;;
        ${MOD_ID_AO420FMC})
            [ "x$AO420_SITES" != "x" ] && AO420_SITES="${AO420_SITES} "
            AO420_SITES="${AO420_SITES}$site"
            set_max_min_khz ${site} 1000 10;;
        *)
            set_max_min_khz ${site} 1000 10;;
        esac
        echo "ao420_init ${site} ${mtype}" >>/tmp/acq420.init-postpowerup-action
        if [ -e ${ek}/dac_mux_master ]; then
                ln -s $ULB/muxpattern ${ek}/
        fi
        CLKDIV=250
}

build_knobs_bolo8_device() {
        site=$1; mtype=$2 dk=$3 ek=$4

        [ "x$BOLO8_SITES" != "x" ] && BOLO8_SITES="${BOLO8_SITES},"
        BOLO8_SITES="${BOLO8_SITES}$site"
        set_max_min_khz ${site} 2000 2000
        echo "setting BOLO ${site} NCHAN 16 for MAIN/CUR ADC combo sample"
        echo 16 > ${ek}/active_chan
        echo 16 > ${ek}/NCHAN
        CLKDIV=100
}

build_knobs_acq427_device() {
        site=$1; mtype=$2 dk=$3 ek=$4

        [ "x$ACQ427_SITES" != "x" ] && ACQ427_SITES="${ACQ427_SITES} "
        ACQ427_SITES="${ACQ427_SITES}$site"
        create_gx ${ek}/ 8
        customize_acq420 $site
}
build_knobs_acq425_device() {
        site=$1; mtype=$2 dk=$3 ek=$4

        [ "x$ACQ425_SITES" != "x" ] && ACQ425_SITES="${ACQ425_SITES} "
        ACQ425_SITES="${ACQ425_SITES}$site"
        create_gx ${ek}/ 16
        customize_acq420 $site
}

build_knobs_dio_device() {
        site=$1; mtype=$2 dk=$3 ek=$4

        echo "build_knobs_dio_device $site $mtype"

        case $mtype in
        ${MOD_ID_DIO482TD})
                ;;
        ${MOD_ID_DIO482TD_PG})
                num_pg=4;
                if [ ! -z $DIO482TD_PG5 ] && [ "$DIO482TD_PG5" != "no" ]; then
                        num_pg=5;
                elif [ -e /mnt/local/sysconfig/epics.sh ]; then
                        source /mnt/local/sysconfig/epics.sh
                        if [ ! -z $DIO482TD_PG5 ] && [ "$DIO482TD_PG5" != "no" ]; then
                                echo "DIO482TD_PG5 in /mnt/local/sysconfig/epics.sh deprecated, please move to /mnt/local/sysconfig/acq400.sh"
                                num_pg=5
                        fi
                fi
                echo $num_pg >${ek}/num_pg;;
        ${MOD_ID_DIO482FMC})
                source  /dev/sites/${site}/details
                mv=$(cat ${dk}/module_variant)
                case $mv in
                F)
                        if [ "$FRU_PART_NUM" != "${FRU_PART_NUM#*FBR}" ]; then
                                echo "FBR part detected in site ${site}: $FRU_PART_NUM"
                                echo 1 > ${dk}/active_low
                                num_pg=16
                        else
                                num_pg=32
                        fi
                        echo $num_pg >${ek}/num_pg;;
                20|21)
                        nc=32
                        [ $mv -eq 21 ] && nc=16

                        init_scaler $ek $site $mv $nc;;
                *)
                        ln -s $ULB/clocks_to_first_edge ${ek}/
                        set_max_min_khz ${site} 25000 10;;
                esac;;
        *)
                ln -s $ULB/clocks_to_first_edge ${ek}/
                set_max_min_khz ${site} 1000 10;;
        esac
        if [ ! -z $DIO_ACTIVE_LOW_SITES ]; then
                echo $DIO_ACTIVE_LOW_SITES | grep -q $site
                if [ $? -eq 0 ]; then
                        echo +++ setting active_low
                        echo 1 > ${dk}/active_low
                fi
        fi
        if [ ! -z $DIO_WDT ]; then
                echo $DIO_WDT > ${dk}/wdt
        fi
        echo +++ setting dio_en
        echo 1 > ${dk}/dio_en
        if [ -e ${ek}/num_pg ]; then
                echo +++ setting PG outputs num_pg $num_pg
                echo 1,1,1,1 > ${dk}/byte_is_output
        fi
}


build_knobs_device() {
    dir=$1
    site=$(cat $dir/site)
    dk=/dev/acq400.${site}.knobs
    ek=/etc/acq400/${site}
    ln -s $dir/ ${dk}
    build_etc_site ${site}
    

    mtype=$(cat /$dir/module_type)
    
    echo build_knobs_device site:$site mtype:$mtype
    
    touch /dev/shm/AI.${site}.wf.fin
    web_append acq400.${site} ${site}   
    CLKDIV="noset"
        
    case $mtype in
    ${MOD_ID_ACQ427ELF}|${MOD_ID_DAC_CELF})
        fake_fmc2_leds;;
    ${MOD_ID_RAD_CELF}|${MOD_ID_DDS_WERA})
        fake_fmc2_leds
        ln -s /usr/local/bin/trigger_at ${ek}
        return;;    
    ${MOD_ID_DIO_BISCUIT}|${MOD_ID_PIG_CELF}|${MOD_ID_TIMBUS})
        fake_fmc2_leds
        return;;
    esac
    
    case $mtype in
    ${MOD_ID_ACQ427ELF}|${MOD_ID_ACQ427ELF_2000})
        build_knobs_acq427_device $site $mtype $dk $ek;;
    ${MOD_ID_ACQ425ELF}|${MOD_ID_ACQ425ELF_2000})
        build_knobs_acq425_device $site $mtype $dk $ek;;
    6C)
        echo "MYSTERIOUS SIX-CHARLIE"
        customize_acq420 $site;;
    ${MOD_ID_ACQ420FMC}|${MOD_ID_ACQ420FMC_2000})
        customize_acq420 $site
        set.sys ${dk}/gains 0000
        echo 'gain=gain[1234]' > ${ek}/groups;;
    ${MOD_ID_ACQ400T_ELF}|${MOD_ID_ACQ400T_FMC})
        [ "x$ACQ400T_SITES" != "x" ] && ACQ400T_SITES="${ACQ400T_SITES} "
        ACQ400T_SITES="${ACQ400T_SITES}$site";;     
    ${MOD_ID_DUMMY})
        return;;
    ${MOD_ID_ACQ435ELF}|${MOD_ID_ACQ430FMC}|${MOD_ID_ACQ437ELF})
        build_knobs_acq43x $site $mtype $dk $ek;;
    ${MOD_ID_ACQ480FMC})
        # space deliberate
        ln -s ${ULC}/acq480_map[48]  ${ek}
        set_max_min_khz ${site} 80000 10000
        ACQ480_SITES="${ACQ480_SITES} $site";;
    ${MOD_ID_ACQ423ELF})
        set_max_min_khz ${site} 200 10
        ACQ423_SITES="${ACQ423_SITES} $site";;
    ${MOD_ID_ACQ426ELF})
        set_max_min_khz ${site} 1000 1
        ACQ426_SITES="${ACQ426_SITES} $site";;
    ${MOD_ID_ACQ465ELF})
        set_max_min_khz ${site} 1400 1
        ACQ465_SITES="${ACQ465_SITES} $site";;
    ${MOD_ID_ACQ494FMC})
        set_max_min_khz ${site} 10000 10000
        make_acq494_spi_fields $ek
        ACQ494_SITES="${ACQ494_SITES} ${site}";; 
    ${MOD_ID_AO420FMC}|${MOD_ID_AO420FMC_CS2}|${MOD_ID_AO422FMC}|${MOD_ID_DAC_CELF})
        build_knobs_ao420 $site $mtype $dk $ek;;
    ${MOD_ID_AO424ELF})
        ao424_init ${site}
        set_max_min_khz ${site} 500 10  
        CLKDIV=500;;
    ${MOD_ID_BOLO8}|${MOD_ID_BOLO8B})
        build_knobs_bolo8_device $site $mtype $dk $ek;;
    ${MOD_ID_DIO432FMC}|${MOD_ID_DIO432PMOD}|${MOD_ID_PIG_CELF}|${MOD_ID_DIO482TD}|${MOD_ID_DIO482TD_PG}|${MOD_ID_DIO482FMC})
        build_knobs_dio_device $site $mtype $dk $ek;;
    ${MOD_ID_DI460ELF})
	mv=$(cat ${dk}/module_variant)
	[ "x$mv" = "x21" ] && init_scaler $ek $site $mv 12
	DI460_SITES="${DI460_SITES} ${site}";;
    ${MOD_ID_FMC_DIO_5CHTTLA})
        mv=$(cat ${dk}/module_variant)
        [ "x$mv" = "x21" ] && init_scaler $ek $site $mv 5
        echo "FMC_DIO_5CHTTLA $site";;
    *)
        CLKDIV=200
        echo "default module $site $mtype $CLKDIV";;
    esac

    if [ -e ${ek}/is_adc ] && [ "$(cat ${ek}/is_adc)" != "0" ];then
        ln -s ${ULC}/get_data_size ${ek}/ch_data_size
    fi
    if [ "$CLKDIV" != "noset" ] && [ -e $dk/clkdiv ]; then
        set.sys $dk/clkdiv $CLKDIV
        rb=$(get.sys $dk/clkdiv)
        echo "set clkdiv $CLKDIV get.sys $dk/clkdiv ${rb}"
    fi
    [ $site -eq 1 ] && echo 0 > ${ek}/event_time
}

install_cal() {
    site=$1
    caldef=/dev/sites/${site}/caldef.xml
    if [ ! -e ${caldef} ]; then
        source  /dev/sites/${site}/details
        calcal=/mnt/local/cal/$FRU_SERIAL.xml   
        if [ -e ${calcal} ]; then
            echo "Calibration found site:$site ${calcal}"
            cp ${calcal} ${caldef}
        else            
            PN="${FRU_PART_NUM%% *}"
            defcal=/usr/local/cal/${PN}-defcal.xml
#            echo Hello $defcal
            if [ ! -e $defcal ]; then
                TYP="${PN%%-*}"
                defcal=/usr/local/cal/${TYP}-defcal.xml               
            fi
            if [ -e ${defcal} ]; then
                cp ${defcal} ${caldef}
                echo "Calibration default installed site:$site ${defcal}"
            else
                echo "WARNING: no calibration or default found for site:$site type:${TYP}"
            fi
        fi
    fi  
}

build_site0() {
    dk=${DK0}
    ek=/etc/acq400/0/
    echo "MOTHERBOARD" > $ek/module_role
    ln -s $1 ${dk}
    web_append acq400.0 0
    fix_state

    ln -s ${dk}/aggregator ${dk}/distributor ${dk}/decimate ${dk}/zclk_sel \
        ${dk}/soft_trigger ${dk}/bufferlen ${dk}/rtm12 ${ek}
        
    [ -e ${dk}/counter_latch ] && ln -s ${dk}/counter_latch ${ek}

    ln -s $ULB/get.site $ULB/set.site $ULB/awg_abort \
	$ULB/fit_rtm_translen_to_buffer $ULB/rgm_flush \
        $ULB/run0 $ULB/play0 $ULB/get.xdt \
        $ULB/streamtonowhered $ULB/set.sync_role \
	$ULB/datals ${ULB}/cstate $ULB/channel_mapping \
	$ULB/stream_subset \
	${ek}
    echo "default 0 ssb=0" >/var/log/run0.log
    ln -s /var/log/run0.log ${ek}/run0_log

    ln -s $ULB/set.site ${ek}/SS

    ln -s /proc/driver/acq400/0/stats /proc/driver/acq400/0/Qstats ${ek}
    ln -s ${MODP}/xo_distributor_sample_size ${ek}/dssb
    ln -s ${MODP}/soft_trigger_count ${ek}
    ln -s ${ULC}/est_buf_size.sh ${ek}/optimise_bufferlen_burst
    ln -s ${ULC}/preset? ${ek}
    ln -s ${ULC}/get_data_size ${ek}/raw_data_size
    echo $HAS_MGTDRAM > ${ek}/has_mgtdram
    IS_TIGA=none
    [ -e ${DK0}/wr_ts_s1_count ] && IS_TIGA=1
    echo $IS_TIGA > ${ek}/is_tiga
    
    
    lck=${MODP}/TIM_CTRL_LOCK
    [ -e $lck ] && ln -s $lck ${ek}

    [ "x$REBOOT_KNOB" = "xy" ] && ln -s $ULB/reboot ${ek}

    for k in ${dk}/data_engine_? ${dk}/gpg_* ${dk}/fpctl* ${dk}/spad* \
        ${dk}/di4_? ${dk}/do4_? ${dk}/data32 ${dk}/bq* ${dk}/dist_s1 \
        ${dk}/sync_* ${dk}/evt_* ${dk}/sig_src_route* ${dk}/wr* ${dk}/rt_status; do
        [ -e $k ] && ln -s $k ${ek}
    done

	for k in  slowmon_fs  slowmon_fin; do
		echo 1 > ${ek}/$k
	done

	for k in slowmon_us slowmon_nacc ssb live_post live_pre live_mode \
		NCHAN data32 shot shot_complete; do
	    echo 0 > ${ek}/$k
	done
    
    echo "+++ build_site0 model $MODEL"
    case $MODEL in
    acq1102)
        rm /etc/acq400/0/sync_out_cable_det
        ln -s /dev/gpio/SYNC_CABLE_DET ${ek}/sync_out_cable_det
        ln -s $ULB/load.si5326 $ULB/si5326_tune_phase ${ek}
        ln -s ${ULC}/LLC_instrument_latency ${ek};;
    acq2?06*)
        [ "x$ETH1_E1000X" = "xy" ] && ${ULC}/load.acq2106_1000X
        rm /etc/acq400/0/sync_out_cable_det
        ln -s /dev/gpio/SYNC_CABLE_DET ${ek}/sync_out_cable_det
        ln -s $ULB/load.si5326 $ULB/si5326_tune_phase ${ek}

        if [ -e ${dk}/has_axi_dma_stack ] && [ $(cat ${dk}/has_axi_dma_stack) != "0" ]; then
           ln -s ${ULC}/stack_480 ${ek}
        fi 
        ln -s ${ULC}/LLC_instrument_latency ${ek};;
    z7io)
        /usr/local/init/z7io_late_init;;
    esac
}

build_mgt400_node() {
    NAME=$1
    MAJOR=$2            

    echo +++ build nodes $NAME          
    mknod /dev/${NAME}.push_data_hg c ${MAJOR} 0
    mknod /dev/${NAME}.push_desc_hg c ${MAJOR} 1
    mknod /dev/${NAME}.pull_data_hg c ${MAJOR} 2
    mknod /dev/${NAME}.pull_desc_hg c ${MAJOR} 3
    mknod /dev/${NAME}.init_push_desc c ${MAJOR} 4
    mknod /dev/${NAME}.init_pull_desc c ${MAJOR} 5
    mknod /dev/${NAME}.push_desc c ${MAJOR} 6
    mknod /dev/${NAME}.pull_desc c ${MAJOR} 7
    mknod /dev/${NAME}.push_status c ${MAJOR} 8
    mknod /dev/${NAME}.pull_status c ${MAJOR} 9
}
build_mgt400() {
    name=$(cat $1/name)
    site=$(cat $1/site)
    web_append ${name} ${site}
    knobs=/dev/acq400.${site}.knobs
    ln -s $1  $knobs
    mkdir /etc/acq400/${site}

#    PS1="build_mgt400 612 $1 \>" sh

    [ -e /etc/acq400/C/MODEL ] && ln -s /etc/acq400/C/* /etc/acq400/${site}   ;# MODEL MAN MTYPE
    build_etc_site ${site}
    
#    PS1="build_mgt400 617 $1 \>" sh

    ch=$(cat /etc/acq400/${site}/name )
    ch=${ch#*.}
    
    ln -s $knobs /dev/acq400.${ch}.knobs
    ln -s /etc/acq400/${site} /etc/acq400/${ch}
    
    if [ -e /dev/acq400.${site}.knobs/module_type ]; then
        mt=$(cat /dev/acq400.${site}.knobs/module_type)
        case ${mt} in
        9[0124])
            let snd="1${SN##CE4??}-10000"
            snx=$(printf "%04x" $snd)
            let mtyp=${dtsn#CE*}/10000
            case $mtyp in
            416)
                set.sys $knobs/ident 0x21${name##*.}6${snx};;
            426)
                set.sys $knobs/ident 0x22${name##*.}6${snx};;
	    412)
                set.sys $knobs/ident 0x11${name##*.}2${snx};;
            *)
                set.sys $knobs/ident 0x${mtyp}${name##*.}${snx};;
            esac
            echo set ident $(cat $knobs/ident)
            echo "aggregator sites=none off" >$knobs/aggregator;;
        93)
			HN=$(hostname)
			snd=1${HN##*_}
			snx=$(printf "%04x" $((snd-1000)))
			set.sys $knobs/ident 0x93C1${snx}
			echo "aggregator sites=none off" >$knobs/aggregator;;
        esac
        build_mgt400_node $(cat $knobs/name $knobs/dev)
    fi
}

build_knobs() {
    spd=/sys/bus/platform/devices
    dir=$spd/40000000.acq2006sc
    if [ -e ${dir} ]; then
        build_site0 ${dir}
    fi
    for dir in $spd/*acq4?0fmc $spd/*acq400pmod; do
        if [ -e ${dir}/site ]; then
            install_cal $(cat ${dir}/site)
            build_knobs_device ${dir}
        fi
    done
     
    if [ "x${ACQ480_SITES}" != "x" ]; then      
        case $MODEL in
        acq1102)
            echo "ACQ1102 + ACQ480 : OK";;
        acq1*)
            bs=$(get_bus_speed)
            if [ "$bs" = "111" ]; then
                echo "ACQ1001 + ACQ480 : BUS SPEED $bs : OK"
            else
                echo "ERROR ACQ1001 + ACQ480 : BUS SPEED $bs check BOOT.bin"
            fi;;
        acq2206*)
            echo "ACQ2206 + ACQ480 : OK";;
        acq2106*)
            echo "ACQ2106 + ACQ480 : OK";;
        *zc706*)
            echo "ZC706 + ACQ480 : OK";;
        kmcuz30)
            echo "KMCUZ30 + ACQ480 : EXPERIMENTAL";;
        z7io)
                export ACQ480_MODPARAMS="fix_defective_fsbl=${Z7IO_FIX_DEFECTIVE_FSBL:-1}"
                echo "Z7IO + ACQ480 : set $ACQ480_MODPARAMS";;
        *)
            echo "ERROR: ACQ480 found, but not compatible with BASE $MODEL"
            exit 1;;
        esac
        
        for site in $ACQ480_SITES
        do
            acq48_model=$(cat /etc/acq400/$site/MODEL)
            echo inspecting ACQ480_SITE $site $acq48_model
            echo $acq48_model | grep -q 482
            if [ $? -eq 0 ]; then               
                set.sys /etc/acq400/$site/acq482_cmap 1
                #echo /etc/acq400/$site/acq482_cmap set $(cat /etc/acq400/$site/acq482_cmap)
            else            
                echo $acq48_model | grep -q 481
                if [ $? -eq 0 ]; then
                    export ACQ480_FIXED_TERM=1
                    export ACQ480_MODPARAMS="$ACQ480_MODPARAMS claim_0x20=0 claim_0x22=0"
                    break
                fi
            fi
        done

        $ULC/acq480.init ${ACQ480_SITES}
    else
        case $MODEL in
        acq1102)
            ;;
        acq1*)
            bs=$(get_bus_speed)
            if [ "$bs" = "111" ]; then
                echo "WARNING ACQ1001 non ACQ480 : BUS SPEED $bs check BOOT.bin"
            fi;;
        esac
    fi
    if [ "x${ACQ423_SITES}" != "x" ]; then
        $ULC/acq423.init ${ACQ423_SITES}
        # use /mnt/local/acq420_custom
        #       BLEN=4194304
        #       NBUF=128
    fi
    if [ "x${DI460_SITES}" != "x" ]; then
	$ULC/di460.init ${DI460_SITES}
    fi
    if [ "x${ACQ425_SITES}" != "x" ]; then
        $ULC/acq425.init ${ACQ425_SITES}
        # use /mnt/local/acq420_custom
        #       BLEN=4194304
        #       NBUF=128
    elif [ "x${ACQ426_SITES}" != "x" ]; then
        for site in $ACQ426_SITES; do
            web_append acq426.$site nomon
        done
        acq426_init=$ULC/acq426.init
        if [ -e /mnt/local/acq426.init ]; then
                acq465_init=/mnt/local/acq426.init
                echo "++ Warning using patch $acq426_init"
        fi
        $acq426_init ${ACQ426_SITES}
    elif [ "x${ACQ427_SITES}" != "x" ]; then
        case $IS_ACQ427 in
        02|03)
            export AO420_SITES;;
        01)
            ;;
        *)
            echo "ERROR: unknown type ACQ427:${IS_ACQ427}";;
        esac
        $ULC/acq427.init ${ACQ427_SITES}
        # use /mnt/local/acq420_custom
        #       BLEN=4194304
        #       NBUF=128
    elif [ "x${ACQ437_SITES}" != "x" ]; then
        $ULC/acq437.init ${ACQ437_SITES}
        # use /mnt/local/acq420_custom
        #       BLEN=4194304
        #       NBUF=128
    elif [ "x${ACQ465_SITES}" != "x" ]; then
        for site in $ACQ465_SITES; do
            web_append acq465.$site nomon
        done
        acq465_init=$ULC/acq465.init
        if [ -e /mnt/local/acq465.init ]; then
        	acq465_init=/mnt/local/acq465.init
        	echo "++ Warning using patch $acq465_init"
        fi
        $acq465_init ${ACQ465_SITES}
    elif [ "x${ACQ494_SITES}" != "x" ]; then
        [ -z $ACQ494_STUB ] && nice $ULC/acq494.init ${ACQ494_SITES} &
    elif [ "x${ACQ400T_SITES}" != "x" ]; then
		echo ACQ400T : "calling $ULC/acq400t.init ${ACQ400T_SITES}"
		$ULC/acq400t.init ${ACQ400T_SITES}
    fi
    has_sfp=0
    for dir in ${spd}/*mgt400; do
        if [ -e ${dir}/site ]; then
            build_mgt400 ${dir}
        fi
    done
}

create_set_fanspeed() {
cat - >$ULB/set.fanspeed <<EOF
#!/bin/sh
# set fanspeed acq1001 style
FSPERCENT=\${1:-10}
set.sys /dev/acq400.0.knobs/fan_percent \$FSPERCENT
EOF
chmod a+rx $ULB/set.fanspeed
echo $ULB/set.fanspeed created
}


set_fans() {
    if [ ! -x $ULB/set.fanspeed ]; then
        if [ -e ${DK0}/fan_percent ]; then
            create_set_fanspeed
        fi  
    fi
    if [ -x $ULB/set.fanspeed ]; then
        echo $ULB/set.fanspeed $1
        $ULB/set.fanspeed $1
    fi
}


if [ "x$FANSPEED" = "x" ]; then
    case $MODEL in
    acq21*)
        FANSPEED=100;;
    *)
        FANSPEED=10;;
    esac
fi


######## Execution Starts Here 

if [ ! -e /etc/sites ]; then
    echo "ERROR FPGA not loaded exit now"
    exit 1  
fi

lsmod | grep -q acq4.0FMC
notloaded=$?

if [ $notloaded -eq 0 ]; then
    echo "module has been loaded already quitting.."    
    exit 1
fi

MODLIB=/lib/modules/$(uname -r)

/sbin/insmod ${MODLIB}/dmaengine314.ko

if [ -x /mnt/local/init.pl330.ko ]; then
    /mnt/local/init.pl330.ko
else
    if [ -f /mnt/local/pl330.ko ]; then
        MOD=/mnt/local/pl330.ko
    else
        MOD=${MODLIB}/pl330.ko
    fi
    /sbin/insmod $MOD
fi

if [ -f /mnt/local/acq420fmc.ko ]; then
    MOD=/mnt/local/acq420fmc.ko
    echo "WARNING using override driver $MOD"
elif [ -f ${MODLIB}/acq420fmc.ko ]; then
    MOD=${MODLIB}/acq420fmc.ko
else
    echo "ERROR, module acq420fmc.ko not found" 
        exit 1
fi



#   mount -t debugfs none /sys/kernel/debug/
echo "for debug:"
echo "echo file acq400_drv.c +p" \> /sys/kernel/debug/dynamic_debug/control
echo "echo file acq400_sysfs.c +p" \> /sys/kernel/debug/dynamic_debug/control

if [ ! -e /etc/sites ]; then
    echo "ERROR: /etc/sites does not exist. FPGA not loaded, quit"
    exit 1
fi
source /etc/sites
good_sites=${good_sites%*,C}
if [ "x$good_sites" != "x" ]; then
    GS="good_sites=$good_sites"
fi

if [ -f /mnt/local/acq420_custom ]; then
    echo "WARNING: using overrides from /mnt/local/acq420_custom"
    source /mnt/local/acq420_custom
else
    DRVR_CUSTOM=""
fi  

acq2106_sn=${dtsn#CE416}
if [ "$acq2106_sn" != "$dtsn" ]; then
    while [ "${acq2106_sn#0*}" != "${acq2106_sn}" ]; do
        acq2106_sn="${acq2106_sn#0*}";
    done
    let snx=$acq2106_sn
    if [ $snx -ge 20 ]; then
        DRVR_CUSTOM="$DRVR_CUSTOM is_acq2106B=1"
    fi
fi  

has_acq48x=0
vsites=

for s in $(echo $good_sites | tr , \  ); do
    case $(get_mtype $s) in
    08)
        echo "+++ has_acq48x"
        
        has_acq48x=1;;
    41)
        if [ $(get_nchan $s) = 16 ]; then
            echo "+++ AO424-16 detected in site $s";
            DRVR_CUSTOM="$DRVR_CUSTOM ao424_16=1"
        fi;;
    6D)
        vs=$(($s+100))
        echo "+++ has acq436 in site $s, create virtual site $vs"       
        cp -a /dev/sites/$s /dev/sites/$vs
        vsites="${vsites},$vs";;
    esac
done

if [ $has_acq48x -ne 0 ]; then  
# larger buffers for ACQ480
    if [ "x$ACQ480_CUSTOM_BUF" != "xy" ]; then
        BLEN=0x400000
        NBUF=128
    else
        echo ACQ480 using user preselect buffers $BLEN $NBUF
    fi
fi
source ${ULC}/choose_vap

GS="${GS}${vsites}"

echo "vg_sites=${good_sites}${vsites}" >>/etc/sites

echo insmod $MOD bufferlen=$BLEN nbuffers=$NBUF $GS $DRVR_CUSTOM
sleep .2    
insmod $MOD bufferlen=$BLEN nbuffers=$NBUF $GS $DRVR_CUSTOM

HUDP_SITES=

LOAD_MGT_REQUEST=0

load_mgt() {
    fpga_id=$(grep filename /tmp/fpga_status | awk '{ print $5 } ')
    COMMS4=$(echo $fpga_id | awk -F _ '{ print $9 }')
    case $COMMS4 in
    98*)
        # this is actually a DSP.. try the next one
        COMMS4=$(echo $fpga_id | awk -F _ '{ print $10 }');;
    esac
    case $COMMS4 in
    908*)
    	echo No MGT/Aurora Function
    	return;;
    909*)
        ${ULC}/load.acq2106_quadcomms;;
    95*)
    	echo MGTDRAM;;
    93*)
        echo ERROR MTCA; return;;
    *)
        echo Normal MGT;;
    esac
    /usr/local/CARE/load.overlay acq2x06_enable_mgtAB
}

load_mgt_mtca() {
    C93=$(grep filename /tmp/fpga_status | awk '{ print $5 }' |
          awk -F _ '{ for (ii=1; ii<=NF; ++ii) if($ii ~ /93[0-9][0-9]/) print $ii; }')
    if [ ! -z $C93 ]; then
        echo "MTCA COMMS module $C93 detected"
        /usr/local/CARE/load.overlay mgtC_overlay
        LOAD_MGT_REQUEST=1
    fi
}

load_mgt_acq1102() {
        WHITE_RABBIT=${WHITE_RABBIT:-0}
        FPGA=$(grep filename /tmp/fpga_status  | awk '{ print $5 }')
        echo "load_mgt_acq1102 01 $FPGA"
        MGTAB="$(acq1102_classify_mgt)"
        port=A; site=13
        num_hudp=0

        for ptype in $MGTAB; do
                case $ptype in
                A|B)
                        /usr/local/CARE/load.overlay acq1102_comms${port}
                        LOAD_MGT_REQUEST=1
                        echo port: $port AURORA $ptype;;
                E)
			[ "x$ETH1_E1000X" = "xy" ] && /usr/local/CARE/load.acq2106_1000X;;
                U)
                        echo port:$port HUDP
                        num_hudp=$((num_hudp+1))
                        if [ $num_hudp -gt 1 ]; then
                                echo "WARNING: only solo HUDP supported so far"
                        fi
                        /usr/local/CARE/load.overlay acq1102_comms${port}
                        LOAD_MGT_REQUEST=1
                        HUDP_SITES="$HUDP_SITES $site";;
                W)
                        echo port:$port WR
                        WHITE_RABBIT=1;;
                *)
                        echo port:$port undefined $ptype;;
                esac
                port=B; site=12
        done
        web_append sfp none
        echo "load_mgt_acq1102 99"
}

if [ -e /etc/acq400/C/MTYPE ]; then
# WHITE_RABBIT=-1: disable, if 0 or 1, attempt to use it.
    WHITE_RABBIT=${WHITE_RABBIT:-0}
    if [ $WHITE_RABBIT -ge 0 ]; then
    	WHITE_RABBIT=0
    	grep filename /tmp/fpga_status | egrep -q -e WHR -e WR
    	[ $? -eq 0 ] && WHITE_RABBIT=1
    fi
    
    grep filename /tmp/fpga_status | grep -q _9[015][0-9][0-9]
    if [ $? -eq 0 ]; then
        load_mgt
        grep -q UDP /tmp/fpga_status
        if [ $? -eq 0 ]; then
            ${ULC}/load.acq2106_hudp
            HUDP_SITES=10
        fi
        cmt=$(cat /etc/acq400/C/MTYPE)
        case $cmt in
        90)
            echo +++ init MGT482
            web_append sfp none;;
        95)
            /usr/local/init/mgtdram8.init
            [ $FANSPEED -lt 60 ] && FANSPEED=60
            echo "set.site 0 distributor comms=2" \
                    >>/tmp/acq420.init-postpowerup-action
            (sleep 7; nice mgtd_monitor_dsp1) &
            HAS_MGTDRAM=14
            echo +++ init MGT-DRAM;;
        *)
            if [ "x$cmd" = "x" ]; then
                echo "WARNING: site C no MTYPE needs FRU\?"
            else
                echo "WARNING: site C unsupported MTYPE $cmt"
            fi ;;
        esac
        LOAD_MGT_REQUEST=1

    elif [ "x$WHITE_RABBIT" = "x1" ]; then
        echo +++ WHITE_RABBIT: skipping mgt device driver load..
        echo +++ init MGT482
        web_append sfp none
    fi
else
    case $MODEL in
    acq110*)
       load_mgt_acq1102;;
    kmcu*)
        load_mgt_mtca;;
    z7io*)
        load_mgt_mtca;;
    esac
fi

if [ $LOAD_MGT_REQUEST -eq 1 ]; then
        MGTMOD=/usr/local/lib/modules/mgt400.ko
        if [ -e /mnt/local/mgt400.ko ]; then
                MGTMOD=/mnt/local/mgt400.ko
                echo "using override module $MGTMOD"
        fi
        
        case $MODEL in
        acq2206*)
                modp="MODEL=$MODEL host_is_acq2206=1";;
        *)
                modp="MODEL=$MODEL";;
        esac
        /sbin/insmod $MGTMOD $modp $MGT400_PRAMS
fi

build_knobs
set_fans $FANSPEED
grep acq400\.[0-9] /proc/devices | build_nodes

[ "x$WHITE_RABBIT" = "x1" ]  && /usr/local/init/wr.init

if [ "x${EBREAK}" = "xyes" ]; then
    echo acq420.init 2: BREAK to emergency shell ^D when done
    PS1="${PS1%>*} EBREAK ${PS1#*>}" /bin/sh
fi

AXI_COUNT=0

if [ -e ${DK0}/has_axi_dma ]; then
    AXI_COUNT=$(cat ${DK0}/has_axi_dma)
    AXIMOD=${MODLIB}/xilinx_axidma.ko
    if [ -e /mnt/local/xilinx_axidma.ko ]; then
        AXIMOD=/mnt/local/xilinx_axidma.ko
        echo "using override module $AXIMOD"
    fi
    if [ $AXI_COUNT -ge 1 ]; then
		if [ $AXI_COUNT -gt 1 ]; then
			source ${ULC}/load.overlay
			load_overlay acq400_2D_overlay
		fi
        /sbin/insmod $AXIMOD maxdev=$AXI_COUNT
        echo $AXI_COUNT > ${DK0}/has_axi_dma
        for file in $DROOT/acq400_axi_dma/adma?
        do
            fn=$(basename $file)
            bn=${fn#adma*}
            web_append  $file $bn
        done

        if [ "x$ACQ480_SITES" != "x" ]; then
            cp ${ULC}/streamtonowhere.480 $ULB/streamtonowhere 
            SO="STREAM_OPTS=--null-copy"
        else
            SO="STREAM_OPTS=--fill-scale"
        fi
        echo $SO >> /etc/sysconfig/acq400_streamd.conf
    fi
fi

if [ $AXI_COUNT -eq 0 ]; then
    [ ! -z "$STREAM_OPTS" ] && \
        echo "STREAM_OPTS=\"$STREAM_OPTS\"" >> /etc/sysconfig/acq400_streamd.conf       
fi


echo ++ Enable counter monitors
CACHE_SITES_MASK=${CACHE_SITES_MASK:-0}
set.sys ${MODP}/cache_sites_mask $CACHE_SITES_MASK

echo ++ Enable analog power..

set.sys /dev/gpio/15VA_EN 1
        
if [ -e ${DK0}/celf_power_en ]; then
    set.sys ${DK0}/celf_power_en 1
fi


if [ -e /mnt/local/power ]; then
    cp /mnt/local/power /etc/sysconfig/power
else
    cat - >/etc/sysconfig/power <<EOF
    VAP=$VAP
    VAN=-$VAP
EOF
fi

if [ "x${EBREAK}" = "xyes" ]; then
    echo acq420.init 70: BREAK to emergency shell ^D when done
    PS1="${PS1%>*} EBREAK ${PS1#*>}" /bin/sh
fi

if [ "x${ACQ480_SITES}" != "x" ]; then
    for site in $ACQ480_SITES
    do
        web_append acq480.$site nomon
        if [ "x$ACQ480_4CH_TWO_LANE" = "xy" ]; then
            ${ULC}/acq480_init_two_lane $site
        elif [ $AXI_COUNT -gt 1 ]; then
            case $MODEL in
                acq1014|acq1001)
                    ${ULC}/acq480_init_two_lane $site;;
            esac
        fi
    done
    echo 1 > /etc/acq400/0/acq480_force_training
fi

[ ! -z $HUDP_SITES ] && for site in $HUDP_SITES; do
        SITE=$site /usr/local/init/hudp.init
done

if [ "x${BOLO8_SITES}" != "x" ]; then
    echo +++ Enable Bolo AFTER Analog power up..
    /usr/local/init/bolo8.init ${BOLO8_SITES}
fi


[ -e /mnt/local/sysconfig/acq400_streamd.conf ] && \
    cp /mnt/local/sysconfig/acq400_streamd* /etc/sysconfig/

FPGA_DSP=$(${ULC}/get-fpga-dsp)
case $FPGA_DSP in
9801)
    /usr/local/init/ddc.init 14;;
9802)
    /usr/local/init/anatrg.init 14;;
9804)
    /usr/local/init/fir-subrate-append.init 14;;
98*)
    echo "non-universal DSP $FPGA_DSP detected, assume local package setup available";;
esac

start_knob_services

[ -e /tmp/acq420.init-postpowerup-action ] && 
    source /tmp/acq420.init-postpowerup-action

nice daemon $WEB_APPEND_JOB

(grep -h numeric /usr/share/doc/acq*help* >/usr/share/doc/numerics)

cat /usr/share/doc/services >> /etc/services
sort_services

mkfifo /dev/shm/sumstreamclient
killall -q inetd
cat /usr/local/init/inetd.conf >>/etc/inetd.conf
inetd /etc/inetd.conf

echo "0 0 0 0 0" > /dev/shm/state

if [ "x${EBREAK}" = "xyes" ]; then
    echo acq420.init 99: BREAK to emergency shell ^D when done
    PS1="${PS1%>*} EBREAK ${PS1#*>}" /bin/sh
fi


